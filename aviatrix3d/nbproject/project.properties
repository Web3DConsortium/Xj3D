# $Id: project.properties 12726 2024-09-19 02:28:15Z tnorbraten $

annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
application.desc=A pure retained-mode Java scene graph API over the top of Java OpenGL \nbindings (JSR 231) and OpenAL Java bindings (for spatialised audio \nsupport). It supports lightweight and heavyweight rendering in AWT, \n SWT and NEWT environments.
application.homepage=http://aviatrix3d.j3d.org/
application.vendor=MOVES Institute, Naval Postgraduate School
application.title=Aviatrix3D ${product.Version} - NPS SF

debug.modulepath=\
    ${run.modulepath}
debug.test.modulepath=\
    ${run.test.modulepath}
file.reference.aviatrix3d-all.jar=jars/aviatrix3d-all_${product.Version}.jar
file.reference.j3d-org-all_3.0.0-nps.jar=lib/j3d-org-all_3.0.0-nps.jar
file.reference.jcommander-1.81.jar=lib/support/jcommander-1.81.jar
file.reference.mockito-core-3.10.0.jar=lib/support/mockito-core-3.10.0.jar
file.reference.testng-7.0.0.jar=lib/support/testng-7.0.0.jar
file.reference.hamcrest-2.2.jar=lib/support/hamcrest-2.2.jar
file.reference.objenesis-3.2.jar=lib/support/objenesis-3.2.jar
file.rererence.byte-buddy-1.11.0=lib/support/byte-buddy-1.11.0.jar
file.reference.byte-buddy-agent-1.11.0.jar=lib/support/byte-buddy-agent-1.11.0.jar
javac.external.vm=false
javac.modulepath=
javac.processormodulepath=
javac.test.modulepath=\
    ${javac.modulepath}
javadoc.html5=false
jlink.launcher=false
jlink.launcher.name=Aviatrix_3D
main.class=BasicNEWTDemo
# Optional override of default Application-Library-Allowable-Codebase attribute identifying the locations where your signed RIA is expected to be found.
manifest.custom.application.library.allowable.codebase=
# Optional override of default Caller-Allowable-Codebase attribute identifying the domains from which JavaScript code can make calls to your RIA without security prompts.
manifest.custom.caller.allowable.codebase=
no.dependencies=true
product.Name=${application.title}
product.shortname=aviatrix3d
product.version.major=3
product.version.minor=1
product.version.level=1
product.Version=${product.version.major}.${product.version.minor}.${product.version.level}-nps
product.url=${application.homepage}
run.jvmargs=${common.run.args}
run.modulepath=\
    ${javac.modulepath}
run.test.modulepath=\
    ${javac.test.modulepath}
source.reference.jogamp-fat.jar=/Users/terry/javaapis/org.jogamp/jogamp-fat/jogamp-fat-java-src
src.background2.dir=examples/background
src.clip2.dir=examples/clip
src.effects2.dir=examples/effects
src.geometry.dir=examples/geometry
src.layers2.dir=examples/layers
src.loaders2.dir=examples/loaders
src.multipass2.dir=examples/multipass
src.npr2.dir=examples/npr
src.picking2.dir=examples/picking
src.shader2.dir=examples/shader
src.texture2.dir=examples/texture
src.transparent.dir=examples/transparent

src.volume2.dir=examples/volume
# jar manifest stuff
years=1995-2024
copyright=Copyright \u00a9 ${years} held by the author(s).  All Rights Reserved.
nps=Naval Postgraduate School (NPS), Monterey, CA
moves.institute=Modeling, Virtual Environments and Simulation (MOVES) Institute
savage.research.group=Scenario Authoring and Visualization for Advanced \
    Graphical Environments (SAVAGE) Research Group
spec.vendor=Justin Couch
spec.vendor-id=org.j3d
spec.title=${application.title}
impl.vendor=Savage Research Group (SRG) of the ${moves.institute} at the ${nps}
impl.vendor-id=edu.nps.moves
impl.branch=branches/Supporting_APIs/${product.shortname}
ext.name=org.j3d.aviatrix3d
Savage.url=https://savage.nps.edu/Savage
bundle.vendor.desc=${impl.vendor}
bundle.vendor.homepage=${Savage.url}
bundle.vendor-id=edu.nps.moves
av3d.repo.url=https://svn.code.sf.net/p/xj3d/code/branches/Supporting_APIs/aviatrix3d
code.base=*.aviatrix.j3d.org

src.basic.dir=${examples.dir}/basic
src.background.dir=${examples.dir}/background
src.clip.dir=${examples.dir}/clip
src.effects.dir=${examples.dir}/effects
src.geometry.dir=${examples.dir}/geometry
src.layers.dir=${examples.dir}/layers
src.loaders.dir=${examples.dir}/loaders
src.multipass.dir=${examples.dir}/multipass
src.npr.dir=${examples.dir}/npr
src.picking.dir=${examples.dir}/picking
src.shader.dir=${examples.dir}/shader
src.texture.dir=${examples.dir}/texture
src.transparent.dir=${examples.dir}/transparent
src.volume.dir=${examples.dir}/volume

jar.archive.disabled=${jnlp.enabled}
jar.index=${jnlp.enabled}
javac.processorpath=\
    ${javac.classpath}
jnlp.codebase.type=no.codebase
jnlp.descriptor=application
jnlp.enabled=false
jnlp.mixed.code=default
jnlp.offline-allowed=false
jnlp.signed=false
jnlp.signing=
jnlp.signing.alias=
jnlp.signing.keystore=
# Optional override of default Codebase manifest attribute, use to prevent RIAs from being repurposed
manifest.custom.codebase=
# Optional override of default Permissions manifest attribute (supported values: sandbox, all-permissions)
manifest.custom.permissions=
mkdist.disabled=true
build.classes.excludes=**/*.java,**/*.form,**/Makefile*,**/*.html

# To match makefile build system
# This directory is removed when the project is cleaned:
build.dir=classes
build.classes.dir=${build.dir}
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=jars
dist.jar=${dist.dir}/${product.shortname}-all_${product.Version}.jar
docs.dir=docs
dist.javadoc.dir=${docs.dir}/javadoc
endorsed.classpath=
file.reference.aviatrix3d-src=src
file.reference.aviatrix3d-test=test
lib.dir=lib
file.reference.jmf.jar=${lib.dir}/jmf.jar
file.reference.vecmath.jar=${lib.dir}/vecmath.jar
file.reference.jogamp-fat.jar=lib/jogamp-fat.jar

includes=**
#includes=org/j3d/aviatrix3d/iutil/*.java,org/j3d/aviatrix3d/rendering/*.java,org/j3d/aviatrix3d/picking/*.java,org/j3d/aviatrix3d/*.java,org/j3d/aviatrix3d/pipeline/*.java,org/j3d/aviatrix3d/pipeline/audio/*.java,org/j3d/aviatrix3d/pipeline/graphics/*.java,org/j3d/aviatrix3d/output/audio/*.java,org/j3d/aviatrix3d/output/graphics/*.java,org/j3d/aviatrix3d/management/*.java,org/j3d/renderer/aviatrix3d/util/*.java,org/j3d/renderer/aviatrix3d/device/input/mouse/*.java,org/j3d/renderer/aviatrix3d/device/input/keyboard/*.java,org/j3d/renderer/aviatrix3d/nodes/*.java,org/j3d/renderer/aviatrix3d/geom/*.java,org/j3d/renderer/aviatrix3d/geom/hanim/*.java,org/j3d/renderer/aviatrix3d/geom/particle/*.java,org/j3d/renderer/aviatrix3d/geom/volume/*.java,org/j3d/renderer/aviatrix3d/texture/*.java,org/j3d/renderer/aviatrix3d/navigation/*.java,org/j3d/renderer/aviatrix3d/pipeline/*.java,org/j3d/renderer/aviatrix3d/loader/*.java,org/j3d/renderer/aviatrix3d/loader/dem/*.java,org/j3d/renderer/aviatrix3d/loader/discrete/*.java,org/j3d/renderer/aviatrix3d/loader/stl/*.java,org/j3d/renderer/aviatrix3d/loader/vterrain/*.java

#includes=org/j3d/aviatrix3d/iutil/*.java,\
#    org/j3d/aviatrix3d/rendering/*.java,\
#    org/j3d/aviatrix3d/picking/*.java,\
#    org/j3d/aviatrix3d/*.java,\
#    org/j3d/aviatrix3d/pipeline/*.java,\
#    org/j3d/aviatrix3d/pipeline/audio/*.java,\
#    org/j3d/aviatrix3d/pipeline/graphics/*.java,\
#    org/j3d/aviatrix3d/output/audio/*.java,\
#    org/j3d/aviatrix3d/output/graphics/*.java,\
#    org/j3d/aviatrix3d/management/*.java,\
#    org/j3d/renderer/aviatrix3d/util/*.java,\
#    org/j3d/renderer/aviatrix3d/device/input/mouse/*.java,\
#    org/j3d/renderer/aviatrix3d/device/input/keyboard/*.java,\
#    org/j3d/renderer/aviatrix3d/nodes/*.java,\
#    org/j3d/renderer/aviatrix3d/geom/*.java,\
#    org/j3d/renderer/aviatrix3d/geom/hanim/*.java,\
#    org/j3d/renderer/aviatrix3d/geom/particle/*.java,\
#    org/j3d/renderer/aviatrix3d/geom/volume/*.java,\
#    org/j3d/renderer/aviatrix3d/texture/*.java,\
#    org/j3d/renderer/aviatrix3d/navigation/*.java,\
#    org/j3d/renderer/aviatrix3d/pipeline/*.java,\
#    org/j3d/renderer/aviatrix3d/loader/*.java,\
#    org/j3d/renderer/aviatrix3d/loader/dem/*.java,\
#    org/j3d/renderer/aviatrix3d/loader/discrete/*.java,\
#    org/j3d/renderer/aviatrix3d/loader/stl/*.java,\
#    org/j3d/renderer/aviatrix3d/loader/vterrain/*.java
    #shader/*.java

excludes=**/DebugPickingHandler* **/swt/** eclipse/** **/doc-files/

jar.compress=false

javac.classpath=\
    ${file.reference.jmf.jar}:\
    ${file.reference.j3d-org-all_3.0.0-nps.jar}:\
    ${file.reference.jogamp-fat.jar}:\
    ${file.reference.vecmath.jar}

# Space-separated list of extra javac options -Xlint:all (all warnings, etc.),
# For javac -X args, type: javac -X help on the CLI
#-Xlint:{-cast,-deprecation,divzero,empty,unchecked,fallthrough,-path,-serial,finally,overrides}
javac.compilerargs=-g -Xlint:unchecked -Xlint:-deprecation -Xlint:-options
javac.deprecation=true
javac.source=1.8
javac.target=1.8
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${file.reference.mockito-core-3.10.0.jar}:\
    ${file.reference.hamcrest-2.2.jar}:\
    ${file.reference.testng-7.0.0.jar}
javadoc.additionalparam=
javadoc.author=true
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=true
javadoc.windowtitle=Aviatrix 3D API Documentation

docs.dir=docs
project.licensePath=${docs.dir}/LICENSE
src.dir=${file.reference.aviatrix3d-src}
meta.inf.dir=${src.dir}/META-INF
platform.active=default_platform
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${file.reference.aviatrix3d-all.jar}
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}:\
    ${file.reference.jcommander-1.81.jar}:\
    ${file.reference.objenesis-3.2.jar}:\
    ${file.rererence.byte-buddy-1.11.0}:\
    ${file.reference.byte-buddy-agent-1.11.0.jar}
source.encoding=UTF-8
src.java.dir=${src.dir}/java
test.java.dir=test/src/java

# Project archiving
nps.av3d.project=${product.shortname}-all_${product.Version}-project

# debug args
runarg3=-Djogl.debug=all
runarg3.1=-Dnativewindow.debug=all
runarg3.2=-Dnewt.debug=all
runarg3.8=-Dawt.nativeDoubleBuffering=true
j2d.trace.level=export J2D_TRACE_LEVEL=4

# For pure NEWT invocation, but not used
runarg3.3=-Djava.awt.headless=true

# Assumes 2GB RAM available
# Deal with the Java Platform Module System (JPMS) for running JOGL
# https://jogamp.org/wiki/index.php/Rudimentary_standalone_example_using_the_fixed_pipeline_by_Julien_Gouesse
common.run.args=-Xmx1g \
     --add-opens java.base/java.lang=ALL-UNNAMED \
     --add-opens java.desktop/sun.awt=ALL-UNNAMED \
     --add-opens java.desktop/sun.java2d=ALL-UNNAMED \
     --add-opens java.base/java.net=ALL-UNNAMED

# Win (no direct draw)
win.run.args=${common.run.args} \
    -Dsun.java2d.d3d=false \
    -Dsun.java2d.opengl=true \
    -Dsun.java2d.dpiaware=false \
    --add-opens java.desktop/sun.awt.windows=ALL-UNNAMED

# *.nix opengl set to false to avoid JVM crash
unix.run.args=${common.run.args} \
    -Dsun.java2d.opengl=false \
    -Djdk.gtk.version=2.2 \
    -Dsun.java2d.dpiaware=true

# Mac
mac.run.args=${common.run.args} \
    -Dsun.java2d.opengl=true \
    -Dsun.java2d.opengl.fbobject=true \
    -Dsun.java2d.dpiaware=true \
    -Dapple.awt.brushMetalLook=true \
    -Dapple.awt.graphics.UseQuartz=true \
    -Dapple.laf.useScreenMenuBar=true

# For multi-threaded NEWT invocation, but not used
runarg10=-XstartOnFirstThread

examples.dir=examples
examples.specific.dir=${examples.dir}
examples.includes=**/*.class
examples.excludes=**/MultiViewDemo* **/SubSurfaceScatteringDemo* **/VpAnimation2* **/*$1*
